<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="hjSQL">
  
	
  	<!-- 회원가입 -->
  	
  	<insert id="join" parameterType="java.util.Map">
		insert into membertable(username, nickname, password, mycareer ) values(#{username}, #{nickname}, #{password}, #{mycareer})
	</insert>
	
	<!-- 회원가입 페이지 아이디 중복 체크 -->
	
	<select id="checkUsername" parameterType="String" resultType="int">
		select count(*) from membertable where username=#{username}
	</select>
	
	<!-- 회원가입 페이지 닉네임 중복 체크 -->
	
	<select id="checkNickname" parameterType="String" resultType="int">
		select count(*) from membertable where nickname=#{nickname}
	</select>
	
  	<!-- 회원 탈퇴 -->
  	
	 <delete id="withdrawal" parameterType="String">
		delete from membertable where username=#{username}
	</delete>   
  	
  	<!-- myPage에 뿌리는 정보 가져오기 -->
  	
  	<select id="getMyPage" parameterType="java.util.Map" resultType="member">
  		select * from membertable where username=#{username}
  	</select>
  	
	<!-- 회원 탈퇴 시키기 -->
	<delete id="memberDelete" parameterType="String">
		delete from membertable where username=#{username}
	</delete>
	
	
	<!-- 월별 회원 가입자의 수 -->
	
    <select id="getTotalStats" resultType="hj.member.bean.TotalDTO">
    	select DATE_FORMAT(created, '%m') month, count(*) total FROM db.membertable GROUP BY month order by month asc
    </select>
    
     <!-- 프로그래밍 언어의 종류와 갯수 -->
    
    <select id="getProgrammingStats" resultType="hj.member.bean.ProgrammingDTO">
    	select topic, count(*) topicTotal from db.cardboard group by topic order by topic asc;
    </select>
    
    <!-- 프로그래밍 언저 총 갯수 -->
	<select id="totalprogramming" resultType="int">
		select count(*) from cardboard
	</select>

	<!-- 관리자 지도 map -->
	<select id="getListFromMatch" resultType="hj.member.bean.MatchDTO">
		SELECT * FROM `db`.`match` ORDER BY `range` DESC;
	</select>
	
	<!-- 관리자 페이지 회원정보 불러오기 -->
	
	 <select id="getMemberList" parameterType="hj.member.bean.Search" resultType="member">
		select * from membertable 
		
		<trim prefix="WHERE" prefixOverrides="AND|OR">

			<if test="searchType=='username' and keyword != null and keyword != '' ">

				AND username like CONCAT('%', #{keyword}, '%')

			</if>

			<if test="searchType=='nickname' and keyword != null and keyword != '' ">

				AND nickname like CONCAT('%', #{keyword}, '%')

			</if>	

		</trim>

		limit #{startList}, #{listSize};
	</select> 
	 
	<!-- 총 글의 수 -->
	
	<select id="getBoardListCnt" parameterType="hj.member.bean.Search" resultType="int">
		select count(*) as listCnt from membertable
		
		<trim prefix="WHERE" prefixOverrides="AND|OR">

			<if test="keyword != null and keyword != '' ">

				<if test="searchType=='username'">
	
					AND username like CONCAT('%', #{keyword}, '%')
	
				</if>
	
				<if test="searchType=='nickname'">
	
					AND nickname like CONCAT('%', #{keyword}, '%')
	
				</if>

     		 </if>

		</trim>

	</select>
	
	<!-- 자유게시판 페이징, 검색 처리한 리스트 -->
	<select id="getBBoardList" parameterType="hj.member.bean.Search" resultType="bBoardDTO">
		SELECT * 
		FROM db.board 
		<trim prefix="WHERE" prefixOverrides="AND|OR">

			<if test="searchType=='title' and keyword != null and keyword != '' ">

				AND title like CONCAT('%', #{keyword}, '%')

			</if>

			<if test="searchType=='nickname' and keyword != null and keyword != '' ">

				AND nickname like CONCAT('%', #{keyword}, '%')

			</if>	

		</trim>
		ORDER BY bno desc
		LIMIT #{startList},#{listSize};
	</select>
	
	<!-- 게시글 총 개수 -->
  	<select id="getBBoardListCnt" resultType="int">
		SELECT count(*) as listCnt 
		FROM db.board
		<trim prefix="WHERE" prefixOverrides="AND|OR">

			<if test="keyword != null and keyword != '' ">
	
				<if test="searchType=='title'">
	
					AND TITLE like CONCAT('%', #{keyword}, '%')
	
				</if>
	
				<if test="searchType=='nickname'">
	
					AND nickname like CONCAT('%', #{keyword}, '%')
	
				</if>
	
	      </if>
	
		</trim>
		
		
	</select>
	
	
	<!-- 자유게시판 보드 게시글 정보 -->
  	<select id="getBBoard" parameterType="int" resultType="bBoardDTO">
  		SELECT * from db.board where bno=#{bno}
  	</select>
  	
  	<!-- 자유게시판 보드 댓글 리스트 -->
  	<select id="getBBoardReplyList" parameterType="int" resultType="bBoardReplyDTO">
  		select * from db.reply2 where bno=#{bno} order by bno desc 
  	</select>
  	
  	<!-- 자유게시판 보드 삭제 -->
	<delete id="deleteBBoard" parameterType="int">
		DELETE FROM db.board where bno=#{bno}
	</delete>
	
	<!-- 자유게시판 댓글 삭제 -->
  	<delete id="replyDelete2" parameterType="int">
  		delete from db.reply2 where rno=#{rno}
  	</delete>
  	
  	<!-- 자유게시판 댓글수 감소 -->
  	<update id="replyDeleteUpdate2" parameterType="int">
  		update db.board set replys=replys-1 where bno = #{bno}
  	</update>
  	
  	<!-- 자유게시판 글 생성 -->
	<insert id="writeBBoard" parameterType="java.util.Map">
		INSERT 
		INTO db.board (title, content, username, nickname, boarddate, updatedate) 
		values(#{title}, #{content}, #{username}, #{nickname}, #{now}, #{now})
	</insert>
	
	<!-- 자유게시판 댓글 생성 -->
  	<insert id="boardReply2" parameterType="java.util.Map">
  		insert into db.reply2 (bno, reply, username, nickname, replydate, updatedate) values(#{bno}, #{reply}, #{username}, #{nickname}, #{now}, #{now});
  	</insert>
  	
  	<!-- 자유게시판 댓글수 증가 -->
  	<update id="replyUpdate2" parameterType="int">
  		update db.board set replys=replys+1 where bno=#{bno}
  	</update>
	
	
	 
	 <!-- mypage 회원정보 수정 -->
	 
	<select id="getWithdrawalList" parameterType="String" resultType="member">
		select * from membertable where username=#{username}
	</select> 
	
	<select id="getNickName" parameterType="String" resultType="member">
		select * from membertable where nickname=#{nickname}
	</select>
	
	<select id="passwordRevise" parameterType="java.util.Map">
		update membertable set password=#{password} where nickname=#{nickname}
	</select>
	
	<!-- 커리어 비번 변경 -->
	<update id="careerPasswordRevise" parameterType="java.util.Map">
		update membertable set myCareer=#{myCareer}, password=#{password} where username=#{username}
	</update>
	
	<!-- 다 변경-->
  	<update id="revise" parameterType="java.util.Map">
  		update membertable set nickname=#{nickname},myCareer=#{myCereer}, password=#{password} where username=#{username}
  	</update>
  	
  	<!-- 닉네임, 커리어 변경 -->
  	<update id="nicknameRevise" parameterType="java.util.Map">
  		update membertable set nickname=#{nickname}, myCareer=#{myCareer} where username=#{username}
  	</update>
  	
  	<!-- 경력 사항 변경 -->
  	<update id="careerRevise" parameterType="java.util.Map">
  		update membertable set myCareer=#{myCareer} where username=#{username}
  	</update>
	  
  </mapper>