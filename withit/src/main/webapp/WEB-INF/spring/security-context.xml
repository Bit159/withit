<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:google="http://www.springframework.org/schema/social/google"
	xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/security/oauth2 https://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/social/google http://www.springframework.org/schema/social/spring-social-google.xsd">
		
	
	<bean id="loginSuccess" class="bj.member.controller.LoginSuccessHandler"></bean>
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	
	<security:http>
		<security:intercept-url pattern="/match" access="hasAnyRole('ROLE_MEMBER', 'ROLE_ADMIN')"/> <!-- ROLE_* -->
		<security:intercept-url pattern="/cardBoard" access="hasAnyRole('ROLE_MEMBER', 'ROLE_ADMIN')"/> <!-- ROLE_* -->
		<security:intercept-url pattern="/myGroup" access="hasAnyRole('ROLE_MEMBER', 'ROLE_ADMIN')"/> <!-- ROLE_* -->
		<security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
		<security:form-login login-page="/loginForm" authentication-success-handler-ref="loginSuccess"  />
		
		<security:logout logout-success-url="/" invalidate-session="true" delete-cookies="remember-me,JSESSIONID" />
		
		<security:session-management invalid-session-url="/" session-fixation-protection="changeSessionId">
			<security:concurrency-control max-sessions="1" expired-url="/"/>
		</security:session-management>
		
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800" />

	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource" 
										users-by-username-query="select username, password, enabled from membertable where username=?"
										authorities-by-username-query="select username, auth as authority from membertable where username=?" />
			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>	
	
</beans>


<!--
<security:user-service>
		<security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN, ROLE_MEMBER"/> authorities 값은 ROLE_* 형태로 작성해야 한다.
		<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
</security:user-service>
  -->